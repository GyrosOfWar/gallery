/*
 * This file is generated by jOOQ.
 */
package com.github.gyrosofwar.imagehive.sql.tables.records;


import com.github.gyrosofwar.imagehive.sql.tables.Image;

import java.time.OffsetDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record16;
import org.jooq.Row16;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ImageRecord extends UpdatableRecordImpl<ImageRecord> implements Record16<UUID, String, String, OffsetDateTime, OffsetDateTime, Long, Integer, Integer, Double, Double, JSONB, String[], Boolean, String, JSONB, Object> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.image.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.image.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.image.title</code>.
     */
    public void setTitle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.image.title</code>.
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.image.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.image.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.image.created_on</code>.
     */
    public void setCreatedOn(OffsetDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.image.created_on</code>.
     */
    public OffsetDateTime getCreatedOn() {
        return (OffsetDateTime) get(3);
    }

    /**
     * Setter for <code>public.image.captured_on</code>.
     */
    public void setCapturedOn(OffsetDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.image.captured_on</code>.
     */
    public OffsetDateTime getCapturedOn() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for <code>public.image.owner_id</code>.
     */
    public void setOwnerId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.image.owner_id</code>.
     */
    public Long getOwnerId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>public.image.width</code>.
     */
    public void setWidth(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.image.width</code>.
     */
    public Integer getWidth() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>public.image.height</code>.
     */
    public void setHeight(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.image.height</code>.
     */
    public Integer getHeight() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>public.image.gps_latitude</code>.
     */
    public void setGpsLatitude(Double value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.image.gps_latitude</code>.
     */
    public Double getGpsLatitude() {
        return (Double) get(8);
    }

    /**
     * Setter for <code>public.image.gps_longitude</code>.
     */
    public void setGpsLongitude(Double value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.image.gps_longitude</code>.
     */
    public Double getGpsLongitude() {
        return (Double) get(9);
    }

    /**
     * Setter for <code>public.image.metadata</code>.
     */
    public void setMetadata(JSONB value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.image.metadata</code>.
     */
    public JSONB getMetadata() {
        return (JSONB) get(10);
    }

    /**
     * Setter for <code>public.image.tags</code>.
     */
    public void setTags(String[] value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.image.tags</code>.
     */
    public String[] getTags() {
        return (String[]) get(11);
    }

    /**
     * Setter for <code>public.image.favorite</code>.
     */
    public void setFavorite(Boolean value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.image.favorite</code>.
     */
    public Boolean getFavorite() {
        return (Boolean) get(12);
    }

    /**
     * Setter for <code>public.image.file_path</code>.
     */
    public void setFilePath(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>public.image.file_path</code>.
     */
    public String getFilePath() {
        return (String) get(13);
    }

    /**
     * Setter for <code>public.image.geo_json</code>.
     */
    public void setGeoJson(JSONB value) {
        set(14, value);
    }

    /**
     * Getter for <code>public.image.geo_json</code>.
     */
    public JSONB getGeoJson() {
        return (JSONB) get(14);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public void setTsVec(Object value) {
        set(15, value);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getTsVec() {
        return get(15);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record16 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row16<UUID, String, String, OffsetDateTime, OffsetDateTime, Long, Integer, Integer, Double, Double, JSONB, String[], Boolean, String, JSONB, Object> fieldsRow() {
        return (Row16) super.fieldsRow();
    }

    @Override
    public Row16<UUID, String, String, OffsetDateTime, OffsetDateTime, Long, Integer, Integer, Double, Double, JSONB, String[], Boolean, String, JSONB, Object> valuesRow() {
        return (Row16) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Image.IMAGE.ID;
    }

    @Override
    public Field<String> field2() {
        return Image.IMAGE.TITLE;
    }

    @Override
    public Field<String> field3() {
        return Image.IMAGE.DESCRIPTION;
    }

    @Override
    public Field<OffsetDateTime> field4() {
        return Image.IMAGE.CREATED_ON;
    }

    @Override
    public Field<OffsetDateTime> field5() {
        return Image.IMAGE.CAPTURED_ON;
    }

    @Override
    public Field<Long> field6() {
        return Image.IMAGE.OWNER_ID;
    }

    @Override
    public Field<Integer> field7() {
        return Image.IMAGE.WIDTH;
    }

    @Override
    public Field<Integer> field8() {
        return Image.IMAGE.HEIGHT;
    }

    @Override
    public Field<Double> field9() {
        return Image.IMAGE.GPS_LATITUDE;
    }

    @Override
    public Field<Double> field10() {
        return Image.IMAGE.GPS_LONGITUDE;
    }

    @Override
    public Field<JSONB> field11() {
        return Image.IMAGE.METADATA;
    }

    @Override
    public Field<String[]> field12() {
        return Image.IMAGE.TAGS;
    }

    @Override
    public Field<Boolean> field13() {
        return Image.IMAGE.FAVORITE;
    }

    @Override
    public Field<String> field14() {
        return Image.IMAGE.FILE_PATH;
    }

    @Override
    public Field<JSONB> field15() {
        return Image.IMAGE.GEO_JSON;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public Field<Object> field16() {
        return Image.IMAGE.TS_VEC;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTitle();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public OffsetDateTime component4() {
        return getCreatedOn();
    }

    @Override
    public OffsetDateTime component5() {
        return getCapturedOn();
    }

    @Override
    public Long component6() {
        return getOwnerId();
    }

    @Override
    public Integer component7() {
        return getWidth();
    }

    @Override
    public Integer component8() {
        return getHeight();
    }

    @Override
    public Double component9() {
        return getGpsLatitude();
    }

    @Override
    public Double component10() {
        return getGpsLongitude();
    }

    @Override
    public JSONB component11() {
        return getMetadata();
    }

    @Override
    public String[] component12() {
        return getTags();
    }

    @Override
    public Boolean component13() {
        return getFavorite();
    }

    @Override
    public String component14() {
        return getFilePath();
    }

    @Override
    public JSONB component15() {
        return getGeoJson();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public Object component16() {
        return getTsVec();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTitle();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public OffsetDateTime value4() {
        return getCreatedOn();
    }

    @Override
    public OffsetDateTime value5() {
        return getCapturedOn();
    }

    @Override
    public Long value6() {
        return getOwnerId();
    }

    @Override
    public Integer value7() {
        return getWidth();
    }

    @Override
    public Integer value8() {
        return getHeight();
    }

    @Override
    public Double value9() {
        return getGpsLatitude();
    }

    @Override
    public Double value10() {
        return getGpsLongitude();
    }

    @Override
    public JSONB value11() {
        return getMetadata();
    }

    @Override
    public String[] value12() {
        return getTags();
    }

    @Override
    public Boolean value13() {
        return getFavorite();
    }

    @Override
    public String value14() {
        return getFilePath();
    }

    @Override
    public JSONB value15() {
        return getGeoJson();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public Object value16() {
        return getTsVec();
    }

    @Override
    public ImageRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public ImageRecord value2(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public ImageRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public ImageRecord value4(OffsetDateTime value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public ImageRecord value5(OffsetDateTime value) {
        setCapturedOn(value);
        return this;
    }

    @Override
    public ImageRecord value6(Long value) {
        setOwnerId(value);
        return this;
    }

    @Override
    public ImageRecord value7(Integer value) {
        setWidth(value);
        return this;
    }

    @Override
    public ImageRecord value8(Integer value) {
        setHeight(value);
        return this;
    }

    @Override
    public ImageRecord value9(Double value) {
        setGpsLatitude(value);
        return this;
    }

    @Override
    public ImageRecord value10(Double value) {
        setGpsLongitude(value);
        return this;
    }

    @Override
    public ImageRecord value11(JSONB value) {
        setMetadata(value);
        return this;
    }

    @Override
    public ImageRecord value12(String[] value) {
        setTags(value);
        return this;
    }

    @Override
    public ImageRecord value13(Boolean value) {
        setFavorite(value);
        return this;
    }

    @Override
    public ImageRecord value14(String value) {
        setFilePath(value);
        return this;
    }

    @Override
    public ImageRecord value15(JSONB value) {
        setGeoJson(value);
        return this;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public ImageRecord value16(Object value) {
        setTsVec(value);
        return this;
    }

    @Override
    public ImageRecord values(UUID value1, String value2, String value3, OffsetDateTime value4, OffsetDateTime value5, Long value6, Integer value7, Integer value8, Double value9, Double value10, JSONB value11, String[] value12, Boolean value13, String value14, JSONB value15, Object value16) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ImageRecord
     */
    public ImageRecord() {
        super(Image.IMAGE);
    }

    /**
     * Create a detached, initialised ImageRecord
     */
    public ImageRecord(UUID id, String title, String description, OffsetDateTime createdOn, OffsetDateTime capturedOn, Long ownerId, Integer width, Integer height, Double gpsLatitude, Double gpsLongitude, JSONB metadata, String[] tags, Boolean favorite, String filePath, JSONB geoJson, Object tsVec) {
        super(Image.IMAGE);

        setId(id);
        setTitle(title);
        setDescription(description);
        setCreatedOn(createdOn);
        setCapturedOn(capturedOn);
        setOwnerId(ownerId);
        setWidth(width);
        setHeight(height);
        setGpsLatitude(gpsLatitude);
        setGpsLongitude(gpsLongitude);
        setMetadata(metadata);
        setTags(tags);
        setFavorite(favorite);
        setFilePath(filePath);
        setGeoJson(geoJson);
        setTsVec(tsVec);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ImageRecord
     */
    public ImageRecord(com.github.gyrosofwar.imagehive.sql.tables.pojos.Image value) {
        super(Image.IMAGE);

        if (value != null) {
            setId(value.id());
            setTitle(value.title());
            setDescription(value.description());
            setCreatedOn(value.createdOn());
            setCapturedOn(value.capturedOn());
            setOwnerId(value.ownerId());
            setWidth(value.width());
            setHeight(value.height());
            setGpsLatitude(value.gpsLatitude());
            setGpsLongitude(value.gpsLongitude());
            setMetadata(value.metadata());
            setTags(value.tags());
            setFavorite(value.favorite());
            setFilePath(value.filePath());
            setGeoJson(value.geoJson());
            setTsVec(value.tsVec());
            resetChangedOnNotNull();
        }
    }
}
