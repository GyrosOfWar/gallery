/*
 * This file is generated by jOOQ.
 */
package com.github.gyrosofwar.imagehive.sql.tables.records;


import com.github.gyrosofwar.imagehive.sql.tables.AlbumImage;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AlbumImageRecord extends TableRecordImpl<AlbumImageRecord> implements Record2<Long, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.album_image.album_id</code>.
     */
    public void setAlbumId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.album_image.album_id</code>.
     */
    public Long getAlbumId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.album_image.image_id</code>.
     */
    public void setImageId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.album_image.image_id</code>.
     */
    public UUID getImageId() {
        return (UUID) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, UUID> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, UUID> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return AlbumImage.ALBUM_IMAGE.ALBUM_ID;
    }

    @Override
    public Field<UUID> field2() {
        return AlbumImage.ALBUM_IMAGE.IMAGE_ID;
    }

    @Override
    public Long component1() {
        return getAlbumId();
    }

    @Override
    public UUID component2() {
        return getImageId();
    }

    @Override
    public Long value1() {
        return getAlbumId();
    }

    @Override
    public UUID value2() {
        return getImageId();
    }

    @Override
    public AlbumImageRecord value1(Long value) {
        setAlbumId(value);
        return this;
    }

    @Override
    public AlbumImageRecord value2(UUID value) {
        setImageId(value);
        return this;
    }

    @Override
    public AlbumImageRecord values(Long value1, UUID value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AlbumImageRecord
     */
    public AlbumImageRecord() {
        super(AlbumImage.ALBUM_IMAGE);
    }

    /**
     * Create a detached, initialised AlbumImageRecord
     */
    public AlbumImageRecord(Long albumId, UUID imageId) {
        super(AlbumImage.ALBUM_IMAGE);

        setAlbumId(albumId);
        setImageId(imageId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised AlbumImageRecord
     */
    public AlbumImageRecord(com.github.gyrosofwar.imagehive.sql.tables.pojos.AlbumImage value) {
        super(AlbumImage.ALBUM_IMAGE);

        if (value != null) {
            setAlbumId(value.albumId());
            setImageId(value.imageId());
            resetChangedOnNotNull();
        }
    }
}
