name: Run tests

on: push

jobs:
  frontend:
    name: Frontend tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Install packages
        run: cd frontend && npm ci
      - name: Run lint
        run: cd frontend && npm run lint
      - name: Run tests
        run: cd frontend && npm test

  backend:
    name: Backend tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: password
        options: --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 21
        uses: actions/setup-java@v1
        with:
          java-version: 21
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Install just
        uses: baptiste0928/cargo-install@v1
        with:
          crate: just
          locked: true
      - name: Install nushell
        uses: baptiste0928/cargo-install@v1
        with:
          crate: nu
          locked: true
      - name: Install ollama
        run: curl -fsSL https://ollama.com/install.sh | sh
      - name: Install llava model
        run: ollama pull llava:7b
      - name: Generate code and build
        run: just generate-client && just backend build
        env:
          IMAGEHIVE_PG_JDBC_URL: jdbc:postgresql://localhost:5432/postgres
          IMAGEHIVE_PG_USER: postgres
          IMAGEHIVE_PG_PASSWORD: password
      - name: Check code formatting
        run: cd backend && ./mvnw prettier:check
      - name: Run tests and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          IMAGEHIVE_PG_JDBC_URL: jdbc:postgresql://localhost:5432/postgres
          IMAGEHIVE_PG_USER: postgres
          IMAGEHIVE_PG_PASSWORD: password
        run: cd backend && ./mvnw -B verify
