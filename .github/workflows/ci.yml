name: Run tests & Sonar

on:
  push

jobs:
  frontend:
    name: Frontend tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 19
      - name: Install packages
        run: cd frontend && npm ci
      - name: Run lint
        run: cd frontend && npm run lint
      - name: Run tests
        run: cd frontend && npm test

  backend:
    name: Backend tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: password
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 21
        uses: actions/setup-java@v1
        with:
          java-version: 21
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 19
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Generate code and build
        run: ./build.sh postgres postgres password
        env:
          IMAGEHIVE_PG_JDBC_URL: jdbc:postgresql://localhost:5432/postgres
          IMAGEHIVE_PG_USER: postgres
          IMAGEHIVE_PG_PASSWORD: password
      - name: Check code formatting
        run: cd backend && ./mvnw prettier:check
      - name: Run tests and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          IMAGEHIVE_PG_JDBC_URL: jdbc:postgresql://localhost:5432/postgres
          IMAGEHIVE_PG_USER: postgres
          IMAGEHIVE_PG_PASSWORD: password
        run: cd backend && ./mvnw -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=GyrosOfWar_imagehive_AYZL_JlCc5USfBbgAJYv
