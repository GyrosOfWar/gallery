/*
 * This file is generated by jOOQ.
 */
package com.github.gyrosofwar.imagehive.sql.tables.records;

import com.github.gyrosofwar.imagehive.sql.tables.pojos.Image;
import java.time.OffsetDateTime;
import java.util.UUID;
import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ImageRecord
  extends UpdatableRecordImpl<ImageRecord>
  implements Record8<UUID, OffsetDateTime, Long, Integer, Integer, Object, JSONB, String[]> {

  private static final long serialVersionUID = 1L;

  /**
   * Setter for <code>public.image.id</code>.
   */
  public void setId(UUID value) {
    set(0, value);
  }

  /**
   * Getter for <code>public.image.id</code>.
   */
  public UUID getId() {
    return (UUID) get(0);
  }

  /**
   * Setter for <code>public.image.created_on</code>.
   */
  public void setCreatedOn(OffsetDateTime value) {
    set(1, value);
  }

  /**
   * Getter for <code>public.image.created_on</code>.
   */
  public OffsetDateTime getCreatedOn() {
    return (OffsetDateTime) get(1);
  }

  /**
   * Setter for <code>public.image.owner_id</code>.
   */
  public void setOwnerId(Long value) {
    set(2, value);
  }

  /**
   * Getter for <code>public.image.owner_id</code>.
   */
  public Long getOwnerId() {
    return (Long) get(2);
  }

  /**
   * Setter for <code>public.image.height</code>.
   */
  public void setHeight(Integer value) {
    set(3, value);
  }

  /**
   * Getter for <code>public.image.height</code>.
   */
  public Integer getHeight() {
    return (Integer) get(3);
  }

  /**
   * Setter for <code>public.image.width</code>.
   */
  public void setWidth(Integer value) {
    set(4, value);
  }

  /**
   * Getter for <code>public.image.width</code>.
   */
  public Integer getWidth() {
    return (Integer) get(4);
  }

  /**
   * @deprecated Unknown data type. Please define an explicit {@link
   * org.jooq.Binding} to specify how this type should be handled. Deprecation
   * can be turned off using {@literal <deprecationOnUnknownTypes/>} in your
   * code generator configuration.
   */
  @Deprecated
  public void setGeoCoordinates(Object value) {
    set(5, value);
  }

  /**
   * @deprecated Unknown data type. Please define an explicit {@link
   * org.jooq.Binding} to specify how this type should be handled. Deprecation
   * can be turned off using {@literal <deprecationOnUnknownTypes/>} in your
   * code generator configuration.
   */
  @Deprecated
  public Object getGeoCoordinates() {
    return get(5);
  }

  /**
   * Setter for <code>public.image.metadata</code>.
   */
  public void setMetadata(JSONB value) {
    set(6, value);
  }

  /**
   * Getter for <code>public.image.metadata</code>.
   */
  public JSONB getMetadata() {
    return (JSONB) get(6);
  }

  /**
   * Setter for <code>public.image.tags</code>.
   */
  public void setTags(String[] value) {
    set(7, value);
  }

  /**
   * Getter for <code>public.image.tags</code>.
   */
  public String[] getTags() {
    return (String[]) get(7);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  @Override
  public Record1<UUID> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Record8 type implementation
  // -------------------------------------------------------------------------

  @Override
  public Row8<UUID, OffsetDateTime, Long, Integer, Integer, Object, JSONB, String[]> fieldsRow() {
    return (Row8) super.fieldsRow();
  }

  @Override
  public Row8<UUID, OffsetDateTime, Long, Integer, Integer, Object, JSONB, String[]> valuesRow() {
    return (Row8) super.valuesRow();
  }

  @Override
  public Field<UUID> field1() {
    return com.github.gyrosofwar.imagehive.sql.tables.Image.IMAGE.ID;
  }

  @Override
  public Field<OffsetDateTime> field2() {
    return com.github.gyrosofwar.imagehive.sql.tables.Image.IMAGE.CREATED_ON;
  }

  @Override
  public Field<Long> field3() {
    return com.github.gyrosofwar.imagehive.sql.tables.Image.IMAGE.OWNER_ID;
  }

  @Override
  public Field<Integer> field4() {
    return com.github.gyrosofwar.imagehive.sql.tables.Image.IMAGE.HEIGHT;
  }

  @Override
  public Field<Integer> field5() {
    return com.github.gyrosofwar.imagehive.sql.tables.Image.IMAGE.WIDTH;
  }

  /**
   * @deprecated Unknown data type. Please define an explicit {@link
   * org.jooq.Binding} to specify how this type should be handled. Deprecation
   * can be turned off using {@literal <deprecationOnUnknownTypes/>} in your
   * code generator configuration.
   */
  @Deprecated
  @Override
  public Field<Object> field6() {
    return com.github.gyrosofwar.imagehive.sql.tables.Image.IMAGE.GEO_COORDINATES;
  }

  @Override
  public Field<JSONB> field7() {
    return com.github.gyrosofwar.imagehive.sql.tables.Image.IMAGE.METADATA;
  }

  @Override
  public Field<String[]> field8() {
    return com.github.gyrosofwar.imagehive.sql.tables.Image.IMAGE.TAGS;
  }

  @Override
  public UUID component1() {
    return getId();
  }

  @Override
  public OffsetDateTime component2() {
    return getCreatedOn();
  }

  @Override
  public Long component3() {
    return getOwnerId();
  }

  @Override
  public Integer component4() {
    return getHeight();
  }

  @Override
  public Integer component5() {
    return getWidth();
  }

  /**
   * @deprecated Unknown data type. Please define an explicit {@link
   * org.jooq.Binding} to specify how this type should be handled. Deprecation
   * can be turned off using {@literal <deprecationOnUnknownTypes/>} in your
   * code generator configuration.
   */
  @Deprecated
  @Override
  public Object component6() {
    return getGeoCoordinates();
  }

  @Override
  public JSONB component7() {
    return getMetadata();
  }

  @Override
  public String[] component8() {
    return getTags();
  }

  @Override
  public UUID value1() {
    return getId();
  }

  @Override
  public OffsetDateTime value2() {
    return getCreatedOn();
  }

  @Override
  public Long value3() {
    return getOwnerId();
  }

  @Override
  public Integer value4() {
    return getHeight();
  }

  @Override
  public Integer value5() {
    return getWidth();
  }

  /**
   * @deprecated Unknown data type. Please define an explicit {@link
   * org.jooq.Binding} to specify how this type should be handled. Deprecation
   * can be turned off using {@literal <deprecationOnUnknownTypes/>} in your
   * code generator configuration.
   */
  @Deprecated
  @Override
  public Object value6() {
    return getGeoCoordinates();
  }

  @Override
  public JSONB value7() {
    return getMetadata();
  }

  @Override
  public String[] value8() {
    return getTags();
  }

  @Override
  public ImageRecord value1(UUID value) {
    setId(value);
    return this;
  }

  @Override
  public ImageRecord value2(OffsetDateTime value) {
    setCreatedOn(value);
    return this;
  }

  @Override
  public ImageRecord value3(Long value) {
    setOwnerId(value);
    return this;
  }

  @Override
  public ImageRecord value4(Integer value) {
    setHeight(value);
    return this;
  }

  @Override
  public ImageRecord value5(Integer value) {
    setWidth(value);
    return this;
  }

  /**
   * @deprecated Unknown data type. Please define an explicit {@link
   * org.jooq.Binding} to specify how this type should be handled. Deprecation
   * can be turned off using {@literal <deprecationOnUnknownTypes/>} in your
   * code generator configuration.
   */
  @Deprecated
  @Override
  public ImageRecord value6(Object value) {
    setGeoCoordinates(value);
    return this;
  }

  @Override
  public ImageRecord value7(JSONB value) {
    setMetadata(value);
    return this;
  }

  @Override
  public ImageRecord value8(String[] value) {
    setTags(value);
    return this;
  }

  @Override
  public ImageRecord values(
    UUID value1,
    OffsetDateTime value2,
    Long value3,
    Integer value4,
    Integer value5,
    Object value6,
    JSONB value7,
    String[] value8
  ) {
    value1(value1);
    value2(value2);
    value3(value3);
    value4(value4);
    value5(value5);
    value6(value6);
    value7(value7);
    value8(value8);
    return this;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /**
   * Create a detached ImageRecord
   */
  public ImageRecord() {
    super(com.github.gyrosofwar.imagehive.sql.tables.Image.IMAGE);
  }

  /**
   * Create a detached, initialised ImageRecord
   */
  public ImageRecord(
    UUID id,
    OffsetDateTime createdOn,
    Long ownerId,
    Integer height,
    Integer width,
    Object geoCoordinates,
    JSONB metadata,
    String[] tags
  ) {
    super(com.github.gyrosofwar.imagehive.sql.tables.Image.IMAGE);
    setId(id);
    setCreatedOn(createdOn);
    setOwnerId(ownerId);
    setHeight(height);
    setWidth(width);
    setGeoCoordinates(geoCoordinates);
    setMetadata(metadata);
    setTags(tags);
  }

  /**
   * Create a detached, initialised ImageRecord
   */
  public ImageRecord(Image value) {
    super(com.github.gyrosofwar.imagehive.sql.tables.Image.IMAGE);
    if (value != null) {
      setId(value.id());
      setCreatedOn(value.createdOn());
      setOwnerId(value.ownerId());
      setHeight(value.height());
      setWidth(value.width());
      setGeoCoordinates(value.geoCoordinates());
      setMetadata(value.metadata());
      setTags(value.tags());
    }
  }
}
