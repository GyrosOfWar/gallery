/*
 * This file is generated by jOOQ.
 */
package com.github.gyrosofwar.imagehive.sql.tables.records;

import com.github.gyrosofwar.imagehive.sql.tables.Album;
import java.time.OffsetDateTime;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AlbumRecord
  extends UpdatableRecordImpl<AlbumRecord>
  implements Record5<Long, String, OffsetDateTime, Long, String[]> {

  private static final long serialVersionUID = 1L;

  /**
   * Setter for <code>public.album.id</code>.
   */
  public void setId(Long value) {
    set(0, value);
  }

  /**
   * Getter for <code>public.album.id</code>.
   */
  public Long getId() {
    return (Long) get(0);
  }

  /**
   * Setter for <code>public.album.name</code>.
   */
  public void setName(String value) {
    set(1, value);
  }

  /**
   * Getter for <code>public.album.name</code>.
   */
  public String getName() {
    return (String) get(1);
  }

  /**
   * Setter for <code>public.album.created_on</code>.
   */
  public void setCreatedOn(OffsetDateTime value) {
    set(2, value);
  }

  /**
   * Getter for <code>public.album.created_on</code>.
   */
  public OffsetDateTime getCreatedOn() {
    return (OffsetDateTime) get(2);
  }

  /**
   * Setter for <code>public.album.owner_id</code>.
   */
  public void setOwnerId(Long value) {
    set(3, value);
  }

  /**
   * Getter for <code>public.album.owner_id</code>.
   */
  public Long getOwnerId() {
    return (Long) get(3);
  }

  /**
   * Setter for <code>public.album.tags</code>.
   */
  public void setTags(String[] value) {
    set(4, value);
  }

  /**
   * Getter for <code>public.album.tags</code>.
   */
  public String[] getTags() {
    return (String[]) get(4);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  @Override
  public Record1<Long> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Record5 type implementation
  // -------------------------------------------------------------------------

  @Override
  public Row5<Long, String, OffsetDateTime, Long, String[]> fieldsRow() {
    return (Row5) super.fieldsRow();
  }

  @Override
  public Row5<Long, String, OffsetDateTime, Long, String[]> valuesRow() {
    return (Row5) super.valuesRow();
  }

  @Override
  public Field<Long> field1() {
    return Album.ALBUM.ID;
  }

  @Override
  public Field<String> field2() {
    return Album.ALBUM.NAME;
  }

  @Override
  public Field<OffsetDateTime> field3() {
    return Album.ALBUM.CREATED_ON;
  }

  @Override
  public Field<Long> field4() {
    return Album.ALBUM.OWNER_ID;
  }

  @Override
  public Field<String[]> field5() {
    return Album.ALBUM.TAGS;
  }

  @Override
  public Long component1() {
    return getId();
  }

  @Override
  public String component2() {
    return getName();
  }

  @Override
  public OffsetDateTime component3() {
    return getCreatedOn();
  }

  @Override
  public Long component4() {
    return getOwnerId();
  }

  @Override
  public String[] component5() {
    return getTags();
  }

  @Override
  public Long value1() {
    return getId();
  }

  @Override
  public String value2() {
    return getName();
  }

  @Override
  public OffsetDateTime value3() {
    return getCreatedOn();
  }

  @Override
  public Long value4() {
    return getOwnerId();
  }

  @Override
  public String[] value5() {
    return getTags();
  }

  @Override
  public AlbumRecord value1(Long value) {
    setId(value);
    return this;
  }

  @Override
  public AlbumRecord value2(String value) {
    setName(value);
    return this;
  }

  @Override
  public AlbumRecord value3(OffsetDateTime value) {
    setCreatedOn(value);
    return this;
  }

  @Override
  public AlbumRecord value4(Long value) {
    setOwnerId(value);
    return this;
  }

  @Override
  public AlbumRecord value5(String[] value) {
    setTags(value);
    return this;
  }

  @Override
  public AlbumRecord values(
    Long value1,
    String value2,
    OffsetDateTime value3,
    Long value4,
    String[] value5
  ) {
    value1(value1);
    value2(value2);
    value3(value3);
    value4(value4);
    value5(value5);
    return this;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /**
   * Create a detached AlbumRecord
   */
  public AlbumRecord() {
    super(Album.ALBUM);
  }

  /**
   * Create a detached, initialised AlbumRecord
   */
  public AlbumRecord(Long id, String name, OffsetDateTime createdOn, Long ownerId, String[] tags) {
    super(Album.ALBUM);
    setId(id);
    setName(name);
    setCreatedOn(createdOn);
    setOwnerId(ownerId);
    setTags(tags);
  }

  /**
   * Create a detached, initialised AlbumRecord
   */
  public AlbumRecord(com.github.gyrosofwar.imagehive.sql.tables.pojos.Album value) {
    super(Album.ALBUM);
    if (value != null) {
      setId(value.id());
      setName(value.name());
      setCreatedOn(value.createdOn());
      setOwnerId(value.ownerId());
      setTags(value.tags());
    }
  }
}
